// =================================================
// GRID SETUP
// =================================================

$columns: 4 !default;
$gutter: 4rem !default;

// =================================================
// BREAKPOINT MEASUREMENTS
// =================================================

$lg: 1200px !default;
$md: 992px !default;
$sm: 768px !default;
$xs: 480px !default;
$xxs: 400px !default;

@mixin mq($point) {
  @if $point == lg {
    @media (min-width: $lg) { @content; }
  }

  @if $point == md {
    @media (min-width: $md) { @content; }
  }

  @if $point == sm {
    @media (min-width: $sm) { @content; }
  }

  @if $point == xs {
    @media (min-width: $xs) { @content; }
  }

  @if $point == xxs {
    @media (min-width: $xxs) { @content; }
  }

}

// Global styles

.row {
  @extend %clearfix;
  
  margin-left: -$gutter/4;
  margin-right: -$gutter/4;

    @include mq(sm) {
      margin-left: -$gutter/2;
      margin-right: -$gutter/2;
    }

}


.container {
  padding: 0 $gutter/4;

    @include mq(sm) {
      padding: 0 $gutter/2;
    }
    
    @include mq(lg) {
      width: $lg;
      margin: 0 auto;
    }
}
.container:after {
  content: "";
  display: table;
  clear: both;
}

[class*="col-"] {
  position: relative;
  min-height: 1px;
  padding: 0 $gutter/4;
  
  @include mq(sm) {
    padding: 0 $gutter/2;
  }
  
  &:after {
    content: "";
    display: table;
    clear: both;
  }
  
}

// Grid loops

@mixin calc-grid-column($index, $class, $type) {
  @if ($type == width) and ($index > 0) {
    .col-#{$class}-#{$index} {
      width: percentage(($index / $columns));
      float: left;
    }
  }
}

@mixin loop-grid-columns($columns, $class, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-column($i, $class, $type);
  }
}

// Create grid for specific class

@mixin make-grid($class) {
  @include loop-grid-columns($columns, $class, width);
}

// Generate the extra small columns

@mixin make-xs-column($columns, $gutter: $gutter) {
    @include mq(xs) {
      width: percentage(($columns / $columns));
    }
}

@include mq(xs) {
  @include make-grid(xs);
}

// Generate the small columns

@mixin make-sm-column($columns, $gutter: $gutter) {
  @include mq(sm) {
    width: percentage(($columns / $columns));
  }
}

@include mq(sm) {
  @include make-grid(sm);
}

// Generate the medium columns

@mixin make-md-column($columns, $gutter: $gutter) {
  @include mq(md) {
    width: percentage(($columns / $columns));
  }
}

@include mq(md) {
  @include make-grid(md);
}

// Generate the large columns

@mixin make-lg-column($columns, $gutter: $gutter) {
  @include mq(lg) {
    width: percentage(($columns / $columns));
  }
}

@include mq(lg) {
  @include make-grid(lg);
}

// No gutter classes

.row.ng {

  & > [class*="col-"] {
    padding-right: 0;
    padding-left: 0;
  }

}

.row.full {
  margin: 0;

    & > [class*="col-"] {
      padding-right: 0;
      padding-left: 0;
    }

}

.container.ng {
  padding: 0 $gutter/4;
  
    @include mq(sm) {
      padding: 0 $gutter/2;
    }

    @include mq(lg) {
      padding: 0;
    }

}